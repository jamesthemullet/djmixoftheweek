---
import { Image } from "astro:assets";

import { fetchGraphQL } from "../lib/api";
import MOST_RECENT_POST_QUERY from "../lib/queries/mostRecentPost";
import OTHER_POSTS_AFTER_FIRST_QUERY from "../lib/queries/otherPostsAfterFirst";
import BaseLayout from "../layouts/BaseLayout.astro";

import "../styles/index.css";
import GET_ALL_GENRES from "../lib/queries/getAllGenres";
import type { Genre, Genres, Post } from "../types";

let recentPost: Post = null;
let recentPostCursor: string | null = null;

try {
  const data = await fetchGraphQL(MOST_RECENT_POST_QUERY);

  recentPost = data?.posts?.nodes?.[0];
  recentPostCursor = data?.posts?.pageInfo?.endCursor;

  if (recentPost) {
    recentPost.featured_image =
      recentPost.featuredImage?.node?.mediaDetails?.sizes?.find(
        (size) => size.name === "medium_large"
      )?.sourceUrl;
  }
} catch (error) {
  console.error("Error fetching the most recent post:", error);
  recentPost = null;
}

let otherPosts = [];

if (recentPostCursor) {
  try {
    const data = await fetchGraphQL(OTHER_POSTS_AFTER_FIRST_QUERY, {
      after: recentPostCursor,
    });
    otherPosts =
      data?.posts?.nodes?.map((post: Post) => ({
        ...post,
        featured_image: post?.featuredImage?.node?.mediaDetails?.sizes?.find(
          (size) => size.name === "medium_large"
        )?.sourceUrl,
      })) || [];
    recentPostCursor = data?.posts?.pageInfo?.endCursor;
  } catch (error) {
    console.error("Error fetching other posts:", error);
  }
}

const posts = [recentPost, ...otherPosts];
const initialCursor = recentPostCursor;

let allGenres: Genres = null;

try {
  allGenres = await fetchGraphQL(GET_ALL_GENRES);
} catch (error) {
  console.error("Error fetching all genres:", error);
}
---

<BaseLayout pageTitle="Home">
  <ul id="post-list">
    {
      posts.map((post, index) => (
        <li>
          <a href={post.slug} rel="noopener noreferrer" aria-label={post.title}>
            <Image
              src={post.featured_image}
              alt={``}
              width={768}
              height={576}
              loading={index === 0 ? "eager" : "lazy"}
            />
            <h2>
              <Fragment set:html={post.title} />
            </h2>
          </a>
          <ul class="genres">
            <li>
              {post.genres.nodes.map((genre: Genre) => genre?.name).join(", ")}
            </li>
          </ul>
        </li>
      ))
    }
  </ul>

  <button id="load-more" data-cursor={initialCursor}>Load More</button>
  <select
    id="genre-filter"
    onchange="window.location.href = this.value"
    aria-label="Show Posts By Genre"
  >
    <option value="">Show Posts By Genre</option>
    {
      allGenres?.genres.nodes.map((genre: Genre) => (
        <option value={`/genre/${genre?.slug}`}>
          {genre?.name} ({genre?.count})
        </option>
      ))
    }
  </select>
  <script type="module" src="/js/load-more.ts"></script>
</BaseLayout>
