---
import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/pages.css";
import { Image } from "astro:assets";

import GET_SINGLE_PAGE from "../lib/queries/getSinglePage";
import { fetchGraphQL } from "../lib/api";
import ALL_POSTS_QUERY from "../lib/queries/allPosts";
import type { Post } from "../types";

const variables = { id: "407" };
let singlePost: Post = null;

try {
  const { page } = await fetchGraphQL(GET_SINGLE_PAGE, variables);
  singlePost = page;
} catch (error) {
  console.error("Error fetching GraphQL data:", error);
  singlePost = null;
}

let allPosts = [];
let hasNextPage = true;
let endCursor = null;

try {
  while (hasNextPage) {
    const { posts } = await fetchGraphQL(ALL_POSTS_QUERY, {
      first: 100,
      after: endCursor,
    });

    allPosts.push(...posts.nodes);

    hasNextPage = posts.pageInfo.hasNextPage;
    endCursor = posts.pageInfo.endCursor;
  }

  allPosts.sort((a, b) => {
    const ratingA = Number.parseFloat(a.ratings?.nodes[0]?.name || "0");
    const ratingB = Number.parseFloat(b.ratings?.nodes[0]?.name || "0");
    return ratingB - ratingA;
  });
} catch (error) {
  console.error("Error fetching posts:", error);
  allPosts = [];
}
---

<BaseLayout
  pageTitle={singlePost?.title}
  description={singlePost?.seo.opengraphDescription}
>
  {
    singlePost?.featuredImage && (
      <Image
        src={singlePost.featuredImage?.node.sourceUrl}
        alt={singlePost.title.rendered}
        width={2000}
        height={2000}
        class="featured-image"
      />
    )
  }
  <div class="container">
    <h2>{singlePost?.title}</h2>
    <div set:html={singlePost?.content} />
    <ul class="league-of-mixes">
      {
        allPosts.map((post) => (
          <li>
            <a href={`/${post.slug}`}>
              {post.title} - {post.ratings?.nodes[0]?.name || "No rating"}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</BaseLayout>
